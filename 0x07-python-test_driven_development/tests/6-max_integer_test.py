#!/usr/bin/python3
"""Unittest for max_integer([..])
"""
import unittest
max_integer = __import__('6-max_integer').max_integer


class TestMaxInteger(unittest.TestCase):
    """Unittest for max_integer"""
    def test_no_arg(self):
        """Unittest for max_integer"""
        self.assertEqual(max_integer(), None)

    def test_empty_list(self):
        """Unittest for max_integer"""
        self.assertEqual(max_integer([]), None)

    def test_identical(self):
        """Unittest for max_integer"""
        self.assertEqual(max_integer([80, 80]), 80)

    def test_max_start(self):
        """Unittest for max_integer"""
        self.assertEqual(max_integer([8, 6, 3]), 8)
    
    def test_normal_list(self):
        self.assertEqual(max_integer([1, 2, 3, 4]), 4)

    def test_unsorted_list(self):
        self.assertEqual(max_integer([1, 3, 4, 2]), 4)

    def test_empty_list(self):
        self.assertIsNone(max_integer([]))

    def test_negative_numbers(self):
        self.assertEqual(max_integer([-1, -5, -3]), -1)

    def test_mixed_numbers(self):
        self.assertEqual(max_integer([-1, 5, 0]), 5)

    def test_float_numbers(self):
        self.assertEqual(max_integer([1.5, 2.5, 3.5]), 3.5)

    def test_float_numbers(self):
        self.assertEqual(max_integer([-1.5, -2.5, -3.5]), -1.5)

    def test_mixed_numbers(self):
        self.assertEqual(max_integer([1.5, -2.5, 3.5]), 3.5)

    def test_ints_and_floats(self):
        self.assertEqual(max_integer([50, 50.8, -500, -0.5, 5000, 7000, -500000]), 7000)

    def test_one(self):
        self.assertEqual(max_integer([200]), 200)

    def test_numeric_string(self):
        self.assertEqual(max_integer("82625417398473"), "9")

    def test_positives_and_negatives_large(self):
        self.assertEqual(max_integer(
            [-6351, 9735, -8649, 4405, 6261, -1907, -9443, -6308,
                7474, -2513, 5721, 2319, 74, 7946, -5544, 7693, -7013,
                -6683, 715, -8738, 9678, -1081, 4730, -1376, 9126,
                7054, 545, 3492, -7285, -1672, 2230, -4576, -4121,
                9876, -537, 9823, 4281, -8003, 327, 1924, -1973, -9844,
                29, 3596, 1108, 6702, 4893, -9452, -5949, -9640, -2156,
                -4104, 5772, 5121, -2186, -4770, -4116, 6443, -9381,
                -9388, 8552, 3582, 3500, 7924, 211, -1176, 6346, -5405,
                899, -3432, -2550, -3353, 6944, 9623]), 9876)

    def test_ints_and_floats(self):
        self.assertEqual(max_integer([50, 50.8, -500, -0.5, 5000, 7000, -500000, 9999999999999999999, -9999999999999999999, 0.0001, -0.0001]), 9999999999999999999)

    def test_negatives(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
        max_integer(
            [-6105618, -854849, -562552, -3088955, -6711290, -4817844,
                -1907189, -8110534, -6601769, -5837524, -4726702,
                -8433749, -7251403, -5117635, -2979207, -1335257,
                -6867266, -9073637, -6224732, -1080801, -1080228,
                -6801278, -8351954, -1736432, -746131, -4376995,
                -967891, -4663691, -71560, -7153670, -8038202,
                -7893047, -9350883, -1132134, -3675971, -8495354,
                -9158229, -9310087, -6319598, -8961209, -4906000,
                -386471, -639929, -2676965, -6881679, -6258057,
                -5490677, -1107298, -4199148, -5933601, -9917695,
                -7759849, -7045734, -4885806, -9485075, -5119579,
                -4147063, -7622811, -4671971, -5439539, -840414,
                -3671742, -4400074, -3549343, -9146070, -6071672,
                -7213213, -1307446, -3936098, -2415520, -9162654,
                -6129976, -5791439, -3481890, -7828832, -6954726,
                -5272933, -4952516, -6115545, -8333464, -7271456,
                -4097027, -4342575, -8400559, -8235052, -4373818,
                -8054214, -8565596, -639225, -2292452, -4269529,
                -7202853, -6891036, -4379807, -7955196, -1536591,
                -2839083, -2586661, -9941097, -3136620]), -71560)

    def test_ints_and_floats_large(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
        max_integer(
            [199872.761905, 115249.881356, 37972.944444, 120549.903226,
                30889.777778, 986136.4, 393382.541667, 15441.826087,
                2503568, 176118.871795, 372359.4, 142747.615385,
                383318.818182, 297732.272727, 104980.527027, 98409.272727,
                617459.875, 56556.621622, 61958.8, 115000.590909,
                240958.457143, 101071.857143, 77616.476923, 89029.64,
                104941.966667, 31940.538462, 106652.101266,
                686700.153846, 52758.709677, 348259.428571, 89457.289474,
                58039.527027, 306427.535714, 64379.011765, 557699.533333,
                18718.639344, 364967.555556, 129951.234043,
                41683.826923, 139149.981818, 356782.866667,
                100259.076923, 245204.75, 78972.530612, 404825.888889,
                124364.25, 1065047.5, 42946.45614, 73670.881356,
                83546.513514, 323098.333333, 88578.352941, 89471.0,
                47745.197917, 17102.676768, 127735.808824,
                110513.058824, 62214.055556, 6968.981481, 40691.346939,
                69931.096774, 67024.44186, 112123.04, 1167186.0,
                140392.05, 15814.362637, 88923.344444, 114726.207317,
                143303.55, 38233.835165, 94065.728571, 42789.892857,
                44182.471698, 41313.101266, 67705.189655, 1222423.5,
                44966.554054, 37153.6, 82085.08, 559793.285714,
                30031.588235, 126947.42623, 309222.3125, 125132.820896,
                37276.273973, 99726.629032, 4270.788235, 490468.4375,
                54086.642857, 73068.5, 108526.508197, 52943.875,
                128534.875, 61069.433333, 37142.719512, 51481.131148,
                571618.5, 35977.166667, 142333.117647, 199123.75]), 2503568)
